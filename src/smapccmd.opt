/* This file is part of Smap.
   Copyright (C) 2006-2007, 2010, 2014 Sergey Poznyakoff

   Smap is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 3, or (at your option)
   any later version.

   Smap is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with Smap.  If not, see <http://www.gnu.org/licenses/>. */

OPTIONS_BEGIN("smapc",
              [<A socket map client.>],
	      [<[URL] [map [key]]]>],
	      [<gnu>],
	      [<copyright_year=2009, 2010, 2014>],
	      [<copyright_holder=Sergey Poznyakoff>])

OPTION(debug, d, LEVEL-SPEC,
       [<set debug verbosity level>])
ALIAS(,x)       
BEGIN
       if (smap_debug_set(optarg))
           smap_error("invalid debug specification: %s", optarg);
END

OPTION(trace, T,,
       [<trace queries>])
BEGIN
       smapc_trace_option = 1;
END

OPTION(prompt, p, STRING,
       [<set command prompt>])
BEGIN
       prompt = optarg;
END

OPTION(batch, B,,
       [<batch mode>])
BEGIN
       batch_mode = 1;
END       

OPTION(norc, q,,
       [<do not read user rc file>])
BEGIN
       norc = 1;
END       

OPTION(source, s, ADDR,
       [<set source address>])
BEGIN
       if (inet_aton(optarg, &source_addr) == 0) {
            smap_error("invalid IP address: %s", optarg);
	    exit(EX_USAGE);
       }
END

OPTION(server, S, URL,
       [<connect to this server>])
BEGIN
       server_option = optarg;
END

OPTION(quiet, Q,,
       [<do not print the normal smapc welcome banner>])
BEGIN
       quiet_startup = 1;
END

OPTIONS_END

void
get_options(int argc, char *argv[], int *index)
{
    GETOPT(argc, argv, *index)
}
    

